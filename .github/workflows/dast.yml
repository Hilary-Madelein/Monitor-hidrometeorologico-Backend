name: DAST Scan

on:
  workflow_call: 
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true
jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Free port 5006 if in use
        run: |
          echo "Verificando si el puerto 5006 está en uso..."
          if lsof -i :5006; then
            echo "Puerto 5006 en uso. Matando proceso..."
            fuser -k 5006/tcp || true
          else
            echo "Puerto 5006 está libre."
          fi

      - name: Build Docker image
        run: |
          docker build -t observatorio_backend .

      - name: Start demo app container
        run: |
          docker rm -f demoApp || true
          docker run -d -p 5006:5006 --name demoApp observatorio_backend

      - name: Check container status
        run: docker ps

      - name: Inspect container logs
        run: docker logs demoApp

      - name: Test container endpoint
        run: |
          echo "Verificando si el servicio responde en localhost:5006..."
          for i in {1..10}; do
            if curl -s http://localhost:5006 > /dev/null; then
              echo "El servicio está disponible."
              exit 0
            else
              echo "Intento $i: El servicio aún no está disponible, reintentando..."
              sleep 5
            fi
          done
          echo "Error: El servicio no respondió a tiempo."
          exit 1

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:5006'
          cmd_options: '-a -j -l WARN -z "-addoninstallall"'
          allow_issue_writing: false

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: Stop and clean up Docker container
        if: always()
        run: |
          docker stop demoApp && docker rm demoApp
          docker container prune --force
          docker image prune --force
