name: 50 DAST Scan Docker Image

on:
  workflow_call: 
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

env:
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} .

      - name: Start demo app container
        env:
          COSMOS_ENDPOINT: ${{ secrets.COSMOS_ENDPOINT }}
          COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
        run: |
          docker rm -f demoApp || true
          docker run -d -p 3006:3006 \
            -e COSMOS_ENDPOINT=${{ secrets.COSMOS_ENDPOINT }} \
            -e COSMOS_KEY=${{ secrets.COSMOS_KEY }} \
            --name demoApp ${{ env.IMAGE_TAG }}

      - name: Check container status
        run: docker ps

      - name: Inspect container logs
        run: docker logs demoApp

      - name: Wait for container to start
        run: |
          echo "Esperando que el contenedor esté disponible en localhost:3006..."
          timeout 600 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3006)" != "200" ]]; do 
            echo "El servicio aún no está disponible, reintentando..."; sleep 5; 
          done'

      - name: Test container endpoint
        run: curl -i http://localhost:3006

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:3006'
          cmd_options: '-a -j -l WARN -z "-addoninstallall"'
          allow_issue_writing: false

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: Stop and clean up Docker container
        if: always()
        run: |
          docker stop demoApp && docker rm demoApp
          docker container prune --force
          docker image prune --force
