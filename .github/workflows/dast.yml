name: 50 DAST Scan Docker Image

on:
  workflow_call:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

env:
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - name: Check out the repository
        uses: actions/checkout@v4

      # Construir la imagen de Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} .

      # Iniciar el contenedor con las variables de entorno necesarias
      - name: Start demo app container
        run: |
          docker rm -f demoApp || true
          docker run -d -p 3006:3006 \
            -e AZURE_COSMOS_DB_URL=${{ secrets.AZURE_COSMOS_DB_URL }} \
            -e AZURE_COSMOS_DB_KEY=${{ secrets.AZURE_COSMOS_DB_KEY }} \
            --name demoApp ${{ env.IMAGE_TAG }}

      # Inspeccionar los logs del contenedor
      - name: Inspect container logs
        run: |
          echo "Inspeccionando los logs del contenedor..."
          docker logs demoApp

      # Esperar a que el contenedor esté listo
      - name: Wait for container to start
        run: |
          echo "Esperando que el contenedor esté disponible en localhost:3006..."
          for i in {1..30}; do
            HTTP_STATUS=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:3006 || true)
            echo "HTTP status: $HTTP_STATUS"
            if [ "$HTTP_STATUS" -eq 200 ]; then
              echo "El servicio está disponible."
              exit 0
            fi
            echo "El servicio aún no está disponible, reintentando..."
            sleep 10
          done
          echo "El servicio no está disponible después de 5 minutos."
          exit 1

      # Probar el endpoint del contenedor
      - name: Test container endpoint
        run: |
          echo "Probar el endpoint del contenedor..."
          curl -i http://localhost:3006

      # Escaneo completo de seguridad con ZAP
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:3006'
          cmd_options: '-a -j -l WARN -z "-addoninstallall"'
          allow_issue_writing: false

      # Subir el reporte HTML generado por ZAP
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: DAST_Report.html
          path: report_html.html

      # Detener y limpiar el contenedor de Docker
      - name: Stop and clean up Docker container
        if: always()
        run: |
          docker stop demoApp && docker rm demoApp
          docker container prune --force
          docker image prune --force
